{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DS598JoshYip"
		},
		"JoshYipADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'JoshYipADLS'"
		},
		"JoshYipADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bdhomeworkstorage.dfs.core.windows.net/"
		},
		"JoshYipKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://joshyipDS591keyvault.vault.azure.net/"
		},
		"OpenWeatherAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://history.openweathermap.org/data/2.5/history/city?id=2885679&type=hour&appid=570cab4134003629803f84567a727bca"
		},
		"OpenWeatherAPI_HistoricalAirPollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://api.openweathermap.org/"
		},
		"OpenWeatherAPI_HistoricalWeather_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://api.openweathermap.org/"
		},
		"Restful_Connection_Historical_Weather_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://history.openweathermap.org/"
		},
		"online_connection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://static.nhtsa.gov/odi/ffdd/cmpl/FLAT_CMPL.zip"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/JoshYipADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('JoshYipADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('JoshYipADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoshYipKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('JoshYipKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OpenWeatherAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"API": {
						"type": "string",
						"defaultValue": "570cab4134003629803f84567a727bca"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('OpenWeatherAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OpenWeatherAPI_HistoricalAirPollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('OpenWeatherAPI_HistoricalAirPollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OpenWeatherAPI_HistoricalWeather')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('OpenWeatherAPI_HistoricalWeather_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Restful_Connection_Historical_Weather')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Restful_Connection_Historical_Weather_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/online_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('online_connection_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeatherDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OpenWeatherAPI_HistoricalWeather",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lat": {
						"type": "float",
						"defaultValue": 42.3601
					},
					"lon": {
						"type": "float",
						"defaultValue": -71.0589
					},
					"start": {
						"type": "string",
						"defaultValue": "1691452800"
					},
					"end": {
						"type": "string",
						"defaultValue": "1720324800"
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OpenWeatherAPI_HistoricalWeather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeatherRESTDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Restful_Connection_Historical_Weather",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lat": {
						"type": "float",
						"defaultValue": 42.3601
					},
					"lon": {
						"type": "float",
						"defaultValue": -71.0589
					},
					"start": {
						"type": "string",
						"defaultValue": "@{div(sub(ticks(addDays(utcNow(),-100)), ticks('1970-01-01T00:00:00Z')), 10000000)}"
					},
					"end": {
						"type": "string",
						"defaultValue": "@{div(sub(ticks(addDays(utcNow(),-1)), ticks('1970-01-01T00:00:00Z')), 10000000)}"
					},
					"appid": {
						"type": "string",
						"defaultValue": "@activity('Web1').output.value"
					},
					"dataType": {
						"type": "string",
						"defaultValue": "hour"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "data/2.5/history/city?lat=@{dataset().lat}&lon=@{dataset().lon}&type=@{dataset().dataType}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Restful_Connection_Historical_Weather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalWeatherRawDataset_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JoshYipADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "bigdata-container"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JoshYipADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest Historical Weather Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://joshyipkeyvault.vault.azure.net/secrets/OpenWeatherAPIKey?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Copy Historical Weather",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HistoricalWeatherDataset",
								"type": "DatasetReference",
								"parameters": {
									"lat": 42.3601,
									"lon": -71.0589,
									"start": "1691452800",
									"end": "1720324800",
									"appid": "@activity('Web1').output.value"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "HistoricalWeatherRawDataset_to_ADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-21T20:29:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HistoricalWeatherDataset')]",
				"[concat(variables('factoryId'), '/datasets/HistoricalWeatherRawDataset_to_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest Historical Weather VIA REST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://joshyipkeyvault.vault.azure.net/secrets/OpenWeatherAPIKey?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, div(sub(ticks(pipeline().parameters.endDate), ticks(pipeline().parameters.startDate)), mul(10000000, mul(86400, pipeline().parameters.intervalDays))))\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "HistoricalWeatherRESTDataset",
											"type": "DatasetReference",
											"parameters": {
												"lat": 42.3601,
												"lon": -71.0589,
												"start": {
													"value": "@item().start",
													"type": "Expression"
												},
												"end": {
													"value": "@item().end",
													"type": "Expression"
												},
												"appid": "@activity('Web1').output.value",
												"dataType": "hour"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "HistoricalWeatherRawDataset_to_ADLS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"startDate": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(formatDateTime(addDays(pipeline().parameters.startDate, mul(item(), int(pipeline().parameters.intervalDays))), 'yyyy-MM-ddTHH:mm:ssZ')), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"endDate": {
						"type": "string",
						"defaultValue": "@div(sub(ticks(formatDateTime(addDays(pipeline().parameters.startDate, mul(add(item(), 1), int(pipeline().parameters.intervalDays))), 'yyyy-MM-ddTHH:mm:ssZ')), ticks('1970-01-01T00:00:00Z')), 10000000)"
					},
					"dateRanges": {
						"type": "array",
						"defaultValue": [
							{
								"start": "@{div(sub(ticks(addDays(utcNow(),-100)), ticks('1970-01-01T00:00:00Z')), 10000000)}",
								"end": "@{div(sub(ticks(addDays(utcNow(), -1)), ticks('1970-01-01T00:00:00Z')), 10000000)}"
							}
						]
					},
					"intervalDays": {
						"type": "int",
						"defaultValue": 7
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HistoricalWeatherRESTDataset')]",
				"[concat(variables('factoryId'), '/datasets/HistoricalWeatherRawDataset_to_ADLS')]"
			]
		}
	]
}